// -*- C++ -*- generated by wxGlade 0.6.3 on Tue Jan 04 18:13:06 2011


#include "TestPluginObject.h"

#include "TestPluginsFrame.h"

// begin wxGlade: ::extracode
// end wxGlade



TestFrame::TestFrame(wxWindow* parent, int id, const wxString& title, const wxPoint& pos, const wxSize& size, long style):
    wxFrame(parent, id, title, pos, size, wxDEFAULT_FRAME_STYLE)
, _objTestPlugins(NULL)
{
    // begin wxGlade: TestFrame::TestFrame
    m_listPlugins = new wxListCtrl(this, 2000, wxDefaultPosition, wxDefaultSize, wxLC_REPORT|wxLC_SINGLE_SEL);
    button_1 = new wxButton(this, 2010, wxT("Detail.."));
    panel_1 = new wxPanel(this, wxID_ANY);
    button_2 = new wxButton(this, 2011, wxT("Run!"));
    static_line_1 = new wxStaticLine(this, wxID_ANY);
    panel_2 = new wxPanel(this, wxID_ANY);
    button_3 = new wxButton(this, wxID_CLOSE, wxEmptyString);
    panel_3 = new wxPanel(this, wxID_ANY);

    set_properties();
    do_layout();
    // end wxGlade
}


BEGIN_EVENT_TABLE(TestFrame, wxFrame)
    // begin wxGlade: TestFrame::event_table
    EVT_LIST_ITEM_DESELECTED(2000, TestFrame::OnListDeselected)
    EVT_LIST_ITEM_SELECTED(2000, TestFrame::OnListSelected)
    EVT_BUTTON(2010, TestFrame::OnBtnDetail)
    EVT_BUTTON(2011, TestFrame::OnBtnRun)
    EVT_BUTTON(wxID_CLOSE, TestFrame::OnBtnClose)
    // end wxGlade
END_EVENT_TABLE();


void TestFrame::OnListDeselected(wxListEvent &event)
{
}

void TestFrame::OnListSelected(wxListEvent &event)
{
    event.Skip();
    wxLogDebug(wxT("Event handler (TestFrame::OnListSelected) not implemented yet")); //notify the user that he hasn't implemented the event handler yet
}


void TestFrame::OnBtnDetail(wxCommandEvent &event)
{
    event.Skip();
    wxLogDebug(wxT("Event handler (TestFrame::OnBtnDetail) not implemented yet")); //notify the user that he hasn't implemented the event handler yet
}


void TestFrame::OnBtnRun(wxCommandEvent &event)
{
    long item = m_listPlugins->GetNextItem(-1, wxLIST_NEXT_ALL, wxLIST_STATE_SELECTED);
    if(item != -1)
    {
        _objTestPlugins->ActivePlugin(m_listPlugins->GetItemData(item));
    }
}


void TestFrame::OnBtnClose(wxCommandEvent &event)
{
    Close();
//    event.Skip();
//    wxLogDebug(wxT("Event handler (TestFrame::OnBtnClose) not implemented yet")); //notify the user that he hasn't implemented the event handler yet
}


// wxGlade: add TestFrame event handlers


void TestFrame::set_properties()
{
    // begin wxGlade: TestFrame::set_properties
    SetTitle(wxT("Plugins Test Frame"));
    SetSize(wxSize(400, 350));
    SetBackgroundColour(wxSystemSettings::GetColour(wxSYS_COLOUR_3DFACE));
    // end wxGlade

    m_listPlugins->InsertColumn(0, wxT("Name"));
    m_listPlugins->InsertColumn(1, wxT("Version"));
    m_listPlugins->InsertColumn(2, wxT("Author"));
    m_listPlugins->InsertColumn(3, wxT("Description"));

    _objTestPlugins.reset(new CTestPluginObject(this));
}


void TestFrame::do_layout()
{
    // begin wxGlade: TestFrame::do_layout
    wxBoxSizer* sizer_2 = new wxBoxSizer(wxVERTICAL);
    wxBoxSizer* sizer_3 = new wxBoxSizer(wxVERTICAL);
    wxBoxSizer* sizer_5 = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* sizer_4 = new wxBoxSizer(wxHORIZONTAL);
    sizer_2->Add(m_listPlugins, 1, wxEXPAND, 0);
    sizer_4->Add(button_1, 0, wxALL, 8);
    sizer_4->Add(panel_1, 1, wxEXPAND, 0);
    sizer_4->Add(button_2, 0, wxALL, 8);
    sizer_3->Add(sizer_4, 0, wxEXPAND, 0);
    sizer_3->Add(static_line_1, 0, wxALL|wxEXPAND, 8);
    sizer_5->Add(panel_2, 2, wxEXPAND, 0);
    sizer_5->Add(button_3, 3, wxALL, 8);
    sizer_5->Add(panel_3, 2, wxEXPAND, 0);
    sizer_3->Add(sizer_5, 0, wxBOTTOM|wxEXPAND, 4);
    sizer_2->Add(sizer_3, 0, wxEXPAND, 0);
    SetSizer(sizer_2);
    Layout();
    Centre();
    // end wxGlade

    _objTestPlugins->Load();
}



IMPLEMENT_APP(MyApp)

bool MyApp::OnInit()
{
    wxInitAllImageHandlers();
    TestFrame* TFrame = new TestFrame(NULL, wxID_ANY, wxEmptyString);
    SetTopWindow(TFrame);
    TFrame->Show();
    return true;
}
