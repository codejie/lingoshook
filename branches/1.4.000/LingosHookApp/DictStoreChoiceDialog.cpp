// -*- C++ -*- generated by wxGlade 0.6.3 on Tue Jul 27 17:10:24 2010

#include "DictObject.h"

#include "DictStoreChoiceDialog.h"

// begin wxGlade: ::extracode
// end wxGlade


CHtmlDictStoreChoiceDialog::CHtmlDictStoreChoiceDialog(CDictObject* parser, wxWindow* parent, int id, const wxString& title, const wxPoint& pos, const wxSize& size, long style):
    wxDialog(parent, id, title, pos, size, wxDEFAULT_DIALOG_STYLE | wxRESIZE_BORDER | wxTHICK_FRAME)
, _objParser(parser)
{
    // begin wxGlade: CHtmlDictStoreChoiceDialog::CHtmlDictStoreChoiceDialog
    sizer_1_staticbox = new wxStaticBox(this, -1, wxEmptyString);
    m_listDict = new CLHCheckBoxList(this, 9200, wxDefaultPosition, wxDefaultSize, wxLC_REPORT|wxSUNKEN_BORDER);
    m_btnReset = new wxButton(this, 9201, _("Reset the type of dictionary html data"));
    label_1 = new wxStaticText(this, wxID_ANY, _("Tip : Click right key to set the type of dictionary html data."));
    static_line_1 = new wxStaticLine(this, wxID_ANY);
    button_1 = new wxButton(this, wxID_CANCEL, wxEmptyString);
    panel_1 = new wxPanel(this, wxID_ANY);
    button_2 = new wxButton(this, wxID_OK, wxEmptyString);

    set_properties();
    do_layout();
    // end wxGlade
}


BEGIN_EVENT_TABLE(CHtmlDictStoreChoiceDialog, wxDialog)
    // begin wxGlade: CHtmlDictStoreChoiceDialog::event_table
    EVT_LIST_ITEM_RIGHT_CLICK(9200, CHtmlDictStoreChoiceDialog::OnDictListRightClick)
    EVT_BUTTON(9201, CHtmlDictStoreChoiceDialog::OnBtnReset)
    EVT_MENU_RANGE(9210, 9290, CHtmlDictStoreChoiceDialog::OnMenuItemDefType)
    // end wxGlade
END_EVENT_TABLE();

// wxGlade: add CHtmlDictStoreChoiceDialog event handlers


void CHtmlDictStoreChoiceDialog::set_properties()
{
    // begin wxGlade: CHtmlDictStoreChoiceDialog::set_properties
    SetTitle(_("Dictionary Chooser.."));
    SetSize(wxSize(396, 425));
    m_listDict->SetMinSize(wxSize(378, 214));

    m_listDict->InsertColumn(0, _("Type"), wxLIST_FORMAT_LEFT, 40);
    m_listDict->InsertColumn(1, _("Title"), wxLIST_FORMAT_LEFT, 220);
    m_listDict->InsertColumn(2, _("ID"), wxLIST_FORMAT_LEFT, 200);
    // end wxGlade

    if(_objParser != NULL)
        _objParser->ShowHtmlDictStoreInfo(*this);
}


void CHtmlDictStoreChoiceDialog::do_layout()
{
    // begin wxGlade: CHtmlDictStoreChoiceDialog::do_layout
    wxStaticBoxSizer* sizer_1 = new wxStaticBoxSizer(sizer_1_staticbox, wxVERTICAL);
    wxBoxSizer* sizer_2 = new wxBoxSizer(wxHORIZONTAL);
    sizer_1->Add(m_listDict, 1, wxEXPAND, 0);
    sizer_1->Add(m_btnReset, 0, wxALL, 4);
    sizer_1->Add(label_1, 0, wxLEFT|wxALIGN_RIGHT, 4);
    sizer_1->Add(static_line_1, 0, wxALL|wxEXPAND, 8);
    sizer_2->Add(button_1, 0, 0, 0);
    sizer_2->Add(panel_1, 1, wxEXPAND, 0);
    sizer_2->Add(button_2, 0, 0, 0);
    sizer_1->Add(sizer_2, 0, wxALL|wxEXPAND, 8);
    SetSizer(sizer_1);
    Layout();
    // end wxGlade
}

void CHtmlDictStoreChoiceDialog::OnDictListRightClick(wxListEvent &event)
{
    long item = event.GetIndex();
    if(item == -1)
        return;

    wxPoint pos = ::wxGetMousePosition();
    pos = ScreenToClient(pos);

    wxMenu menu;

    if(_objParser != NULL)
        _objParser->ShowDictStoreInfoItemContextMenu(*this, item, 9210, &menu);

    PopupMenu(&menu, pos.x, pos.y);
}


void CHtmlDictStoreChoiceDialog::OnBtnReset(wxCommandEvent &event)
{
    if(_objParser != NULL)
        _objParser->ResetDictStoreInfo(*this);
}

void CHtmlDictStoreChoiceDialog::OnMenuItemDefType(wxCommandEvent &event)
{
    long item = m_listDict->GetNextItem(-1, wxLIST_NEXT_ALL, wxLIST_STATE_FOCUSED | wxLIST_STATE_SELECTED);
    if(item == -1)
        return;
    
    int menuid = event.GetId();

    menuid = menuid - 9210;

    switch(menuid)
    {
    case HtmlDictParser::HTMLDATATYPE_1:
    case HtmlDictParser::HTMLDATATYPE_2:
    case HtmlDictParser::HTMLDATATYPE_3:
        if(_objParser != NULL)
            _objParser->RefreshDictStoreInfo(*this, item, menuid);
        break;
    default:
        if(_objParser != NULL)
            _objParser->UpdateDictStoreInfoDefType(*this, item);
    }
}

