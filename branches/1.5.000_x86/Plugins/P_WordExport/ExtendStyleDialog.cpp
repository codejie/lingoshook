// -*- C++ -*-
//
// generated by wxGlade 0.6.8 (standalone edition) on Thu Oct 24 21:31:58 2013
//
// Example for compiling a single file project under Linux using g++:
//  g++ MyApp.cpp $(wx-config --libs) $(wx-config --cxxflags) -o MyApp
//
// Example for compiling a multi file project under Linux using g++:
//  g++ main.cpp $(wx-config --libs) $(wx-config --cxxflags) -o MyApp Dialog1.cpp Frame1.cpp
//

#include "ExtendStyleDialog.h"

// begin wxGlade: ::extracode
// end wxGlade



ExtendStyleDialog::ExtendStyleDialog(wxWindow* parent, int id, const wxString& title, const wxPoint& pos, const wxSize& size, long style):
    wxDialog(parent, id, title, pos, size, wxDEFAULT_DIALOG_STYLE)
{
    // begin wxGlade: ExtendStyleDialog::ExtendStyleDialog
    label_1 = new wxStaticText(this, wxID_ANY, _("Word Text Style"));
    static_line_4 = new wxStaticLine(this, wxID_ANY);
    label_17 = new wxStaticText(this, wxID_ANY, _("Font Size"), wxDefaultPosition, wxDefaultSize, wxALIGN_RIGHT);
    const wxString combo_box_1_choices[] = {
        _("Normal (11pt)"),
        _("Medium (16pt)"),
        _("Large (22pt)")
    };
    comboxFontSize = new wxComboBox(this, 8000, wxT(""), wxDefaultPosition, wxDefaultSize, 3, combo_box_1_choices, wxCB_DROPDOWN);
    label_18 = new wxStaticText(this, wxID_ANY, _("Font Color"), wxDefaultPosition, wxDefaultSize, wxALIGN_RIGHT);
    const wxString combo_box_2_choices[] = {
		_("None"),
        _("Black (#000000)"),
        _("White (#ffffff)"),
        _("Red (#ff0000)"),
        _("Green (#00ff00)"),
        _("Blue (#0000ff)")
    };
    comboxTextColor = new wxComboBox(this, 8001, wxT(""), wxDefaultPosition, wxDefaultSize, 6, combo_box_2_choices, wxCB_DROPDOWN);
    label_19 = new wxStaticText(this, wxID_ANY, _("Background Color"), wxDefaultPosition, wxDefaultSize, wxALIGN_RIGHT);
    const wxString combo_box_3_choices[] = {
		_("None"),
        _("Black (#000000)"),
        _("White (#ffffff)"),
        _("Red (#ff0000)"),
        _("Green (#00ff00)"),
        _("Blue (#0000ff)")
    };
    comboxBgColor = new wxComboBox(this, 8002, wxT(""), wxDefaultPosition, wxDefaultSize, 6, combo_box_3_choices, wxCB_DROPDOWN);
    label_20 = new wxStaticText(this, wxID_ANY, _("Font Style"), wxDefaultPosition, wxDefaultSize, wxALIGN_RIGHT);
    const wxString choice_15_choices[] = {
        _("Normal"),
        _("Bold"),
        _("Italic"),
        _("Bold and Italic")
    };
    listFontStyle = new wxChoice(this, 8003, wxDefaultPosition, wxDefaultSize, 4, choice_15_choices, 1);
    label_9 = new wxStaticText(this, wxID_ANY, _("Word Explanation Style"));
    static_line_3 = new wxStaticLine(this, wxID_ANY);
    label_10 = new wxStaticText(this, wxID_ANY, _("Content Indentation"), wxDefaultPosition, wxDefaultSize, wxALIGN_RIGHT);
    const wxString combo_box_4_choices[] = {
        _("None"),
        _("4px"),
        _("8px"),
        _("12px"),
        _("20px"),
        _("32px")
    };
    comboxIndentation = new wxComboBox(this, 8010, wxT(""), wxDefaultPosition, wxDefaultSize, 6, combo_box_4_choices, wxCB_DROPDOWN);
    static_line_5 = new wxStaticLine(this, wxID_ANY);
    button_1 = new wxButton(this, wxID_OK, wxEmptyString);
    panel_1 = new wxPanel(this, wxID_ANY);
    button_2 = new wxButton(this, wxID_CANCEL, wxEmptyString);

    set_properties();
    do_layout();
    // end wxGlade
}


void ExtendStyleDialog::set_properties()
{
    // begin wxGlade: ExtendStyleDialog::set_properties
    SetTitle(_("Extended Style Settings"));
    comboxFontSize->SetSelection(0);
    comboxTextColor->SetSelection(0);
    comboxBgColor->SetSelection(0);
    listFontStyle->SetSelection(0);
    comboxIndentation->SetSelection(0);
    // end wxGlade
}


void ExtendStyleDialog::do_layout()
{
    // begin wxGlade: ExtendStyleDialog::do_layout
    wxBoxSizer* sizer_1 = new wxBoxSizer(wxVERTICAL);
    wxBoxSizer* sizer_16 = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* sizer_12 = new wxBoxSizer(wxVERTICAL);
    wxBoxSizer* sizer_14 = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* sizer_15 = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* sizer_13 = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* sizer_4 = new wxBoxSizer(wxVERTICAL);
    wxBoxSizer* sizer_6 = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* sizer_19 = new wxBoxSizer(wxVERTICAL);
    wxBoxSizer* sizer_23 = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* sizer_22 = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* sizer_21 = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* sizer_20 = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* sizer_5 = new wxBoxSizer(wxHORIZONTAL);
    sizer_5->Add(label_1, 0, 0, 0);
    sizer_5->Add(static_line_4, 1, wxALL, 4);
    sizer_4->Add(sizer_5, 0, wxTOP|wxBOTTOM|wxEXPAND, 8);
    sizer_6->Add(20, 20, 0, wxEXPAND, 0);
    sizer_20->Add(label_17, 1, wxALIGN_CENTER_VERTICAL, 0);
    sizer_20->Add(comboxFontSize, 1, wxLEFT, 4);
    sizer_19->Add(sizer_20, 1, wxALL|wxEXPAND, 4);
    sizer_21->Add(label_18, 1, wxALIGN_CENTER_VERTICAL, 0);
    sizer_21->Add(comboxTextColor, 1, wxLEFT, 4);
    sizer_19->Add(sizer_21, 1, wxALL|wxEXPAND, 4);
    sizer_22->Add(label_19, 1, wxALIGN_CENTER_VERTICAL, 0);
    sizer_22->Add(comboxBgColor, 1, wxLEFT, 4);
    sizer_19->Add(sizer_22, 1, wxALL|wxEXPAND, 4);
    sizer_23->Add(label_20, 1, wxALIGN_CENTER_VERTICAL, 0);
    sizer_23->Add(listFontStyle, 1, wxLEFT, 4);
    sizer_19->Add(sizer_23, 1, wxALL|wxEXPAND, 4);
    sizer_6->Add(sizer_19, 1, wxEXPAND, 0);
    sizer_4->Add(sizer_6, 0, wxEXPAND, 0);
    sizer_1->Add(sizer_4, 0, wxALL|wxEXPAND, 4);
    sizer_13->Add(label_9, 0, 0, 0);
    sizer_13->Add(static_line_3, 1, wxALL, 4);
    sizer_12->Add(sizer_13, 0, wxTOP|wxBOTTOM|wxEXPAND, 8);
    sizer_14->Add(20, 20, 0, wxEXPAND, 0);
    sizer_15->Add(label_10, 1, wxALIGN_CENTER_VERTICAL, 0);
    sizer_15->Add(comboxIndentation, 1, wxLEFT, 4);
    sizer_14->Add(sizer_15, 1, wxALL|wxEXPAND, 4);
    sizer_12->Add(sizer_14, 0, wxEXPAND, 0);
    sizer_1->Add(sizer_12, 0, wxALL|wxEXPAND, 4);
    sizer_1->Add(static_line_5, 0, wxALL|wxEXPAND, 8);
    sizer_16->Add(button_1, 0, 0, 0);
    sizer_16->Add(panel_1, 1, wxEXPAND, 0);
    sizer_16->Add(button_2, 0, 0, 0);
    sizer_1->Add(sizer_16, 0, wxALL|wxEXPAND, 4);
    SetSizer(sizer_1);
    sizer_1->Fit(this);
    Layout();
    // end wxGlade
}

BEGIN_EVENT_TABLE(ExtendStyleDialog, wxDialog)
    // begin wxGlade: ExtendStyleDialog::event_table
    EVT_BUTTON(wxID_OK, ExtendStyleDialog::OnBtenOK)
    // end wxGlade
END_EVENT_TABLE();


void ExtendStyleDialog::OnBtenOK(wxCommandEvent &event)
{
	MakeStyleData(_dataStyle);
	wxDialog::EndModal(wxID_OK);
}

const ExtendStyleDialog::StyleData& ExtendStyleDialog::GetStyleData() const
{
	return _dataStyle;
}

void ExtendStyleDialog::MakeStyleData(ExtendStyleDialog::StyleData& data)
{
	switch(comboxFontSize->GetSelection())
	{
	case 0:
		_dataStyle.strFontSize = wxT("11pt");
		break;
	case 1:
		_dataStyle.strFontSize = wxT("16pt");
		break;
	case 2:
		_dataStyle.strFontSize = wxT("22pt");
		break;
	default:
		_dataStyle.strFontSize = comboxFontSize->GetValue();
	}

	switch(comboxTextColor->GetSelection())
	{
	case 0:
		_dataStyle.strBackgroundColor = wxEmptyString;
		break;
	case 1:
		_dataStyle.strTextColor = wxT("#000000");
		break;
	case 2:
		_dataStyle.strTextColor = wxT("#ffffff");
		break;
	case 3:
		_dataStyle.strTextColor = wxT("#ff0000");
		break;
	case 4:
		_dataStyle.strTextColor = wxT("#00ff00");
		break;
	case 5:
		_dataStyle.strTextColor = wxT("#0000ff");
		break;
	default:
		_dataStyle.strTextColor = comboxTextColor->GetValue();
	}

	switch(comboxBgColor->GetSelection())
	{
	case 0:
		_dataStyle.strBackgroundColor = wxEmptyString;
		break;
	case 1:
		_dataStyle.strBackgroundColor = wxT("#000000");
		break;
	case 2:
		_dataStyle.strBackgroundColor = wxT("#ffffff");
		break;
	case 3:
		_dataStyle.strBackgroundColor = wxT("#ff0000");
		break;
	case 4:
		_dataStyle.strBackgroundColor = wxT("#00ff00");
		break;
	case 5:
		_dataStyle.strBackgroundColor = wxT("#0000ff");
		break;
	default:
		_dataStyle.strBackgroundColor = comboxTextColor->GetValue();
	}

	switch(listFontStyle->GetSelection())
	{
	case 0:
		_dataStyle.iFontStyle = 0;
		break;
	case 1:
		_dataStyle.iFontStyle = 1;
		break;
	case 2:
		_dataStyle.iFontStyle = 2;
		break;
	case 3:
		_dataStyle.iFontStyle = 4;
		break;
	default:;
	}
	
	switch(comboxIndentation->GetSelection())
	{
	case 0:
		_dataStyle.strContentIndentation = wxEmptyString;
		break;
	case 1:
		_dataStyle.strContentIndentation = wxT("4px");
		break;
	case 2:
		_dataStyle.strContentIndentation = wxT("8px");
		break;
	case 3:
		_dataStyle.strContentIndentation = wxT("12px");
		break;
	case 4:
		_dataStyle.strContentIndentation = wxT("20px");
		break;
	case 5:
		_dataStyle.strContentIndentation = wxT("32px");
		break;
	default:
		_dataStyle.strContentIndentation = comboxIndentation->GetValue();
	}
}

