// -*- C++ -*- generated by wxGlade 0.6.5 (standalone edition) on Thu May 10 17:35:25 2012

#include "TinyHtmlParser.h"

#include "HtmlOptimumConfigDialog.h"

// begin wxGlade: ::extracode
// end wxGlade


const wxString HtmlOptimumConfigDialog::STR_TAG_ALL		=	wxT("All Tag Elements");
const wxString HtmlOptimumConfigDialog::STR_TAG_LINK	=	wxT("A (Link Elements)");
const wxString HtmlOptimumConfigDialog::STR_TAG_IMG		=	wxT("IMG (Image/Picture Elements)");
const wxString HtmlOptimumConfigDialog::STR_TAG_OBJECT	=	wxT("OBJECT (Object Elements)");
const wxString HtmlOptimumConfigDialog::STR_TAG_EMBED	=	wxT("EMBED (Embedded Elemetns)");
const wxString HtmlOptimumConfigDialog::STR_TAG_PARAM	=	wxT("PARAM (Parameter Elements)");

HtmlOptimumConfigDialog::HtmlOptimumConfigDialog(CConfigData* conf, wxWindow* parent, int id, const wxString& title, const wxPoint& pos, const wxSize& size, long style):
    wxDialog(parent, id, title, pos, size, wxDEFAULT_DIALOG_STYLE|wxRESIZE_BORDER|wxTHICK_FRAME)
, _config(conf)
{
    // begin wxGlade: HtmlOptimumConfigDialog::HtmlOptimumConfigDialog
    label_1 = new wxStaticText(this, wxID_ANY, wxT("Tag Elements"));
    static_line_2 = new wxStaticLine(this, wxID_ANY);
    const wxString comboTag_choices[] = {
        wxT("Default Configuration"),
        wxT("A (Link Elements)"),
        wxT("IMG (Image/Picture Elements)"),
        wxT("OBJECT (Object Elements)"),
        wxT("EMBED (Embedded Elemetns)"),
        wxT("PARAM (Parameter Elements)"),
        wxT("All Tag Elements")
    };
    comboTag = new wxComboBox(this, wxID_ANY, wxT(""), wxDefaultPosition, wxDefaultSize, 7, comboTag_choices, wxCB_DROPDOWN|wxCB_DROPDOWN);
    button_4 = new wxButton(this, 1000, wxT("Add"));
    const wxString *listTag_choices = NULL;
    listTag = new wxListBox(this, wxID_ANY, wxDefaultPosition, wxDefaultSize, 0, listTag_choices, 0);
    button_5 = new wxButton(this, 1001, wxT("Remove"));
    button_6 = new wxButton(this, 1002, wxT("Remove All"));
    panel_2 = new wxPanel(this, wxID_ANY);
    label_1_copy = new wxStaticText(this, wxID_ANY, wxT("Attribute Elements"));
    static_line_2_copy = new wxStaticLine(this, wxID_ANY);
    const wxString comboAttrib_choices[] = {
        wxT("Default Configuration"),
        wxT("onclick"),
        wxT("onmouseout"),
        wxT("onmouseover"),
        wxT("onmouseup"),
        wxT("onmousedown"),
        wxT("onselectstart"),
        wxT("All Attribute Elements")
    };
    comboAttrib = new wxComboBox(this, wxID_ANY, wxT(""), wxDefaultPosition, wxDefaultSize, 8, comboAttrib_choices, wxCB_DROPDOWN|wxCB_DROPDOWN);
    button_4_copy = new wxButton(this, 2000, wxT("Add"));
    const wxString *listAttrib_choices = NULL;
    listAttrib = new wxListBox(this, wxID_ANY, wxDefaultPosition, wxDefaultSize, 0, listAttrib_choices, 0);
    button_5_copy = new wxButton(this, 2001, wxT("Remove"));
    button_6_copy = new wxButton(this, 2002, wxT("Remove All"));
    panel_2_copy = new wxPanel(this, wxID_ANY);
    label_1_copy_1 = new wxStaticText(this, wxID_ANY, wxT("Value Elements"));
    static_line_2_copy_1 = new wxStaticLine(this, wxID_ANY);
    const wxString comboValue_choices[] = {
        wxT("Default Configuration"),
        wxT("All Value Elements")
    };
    comboValue = new wxComboBox(this, wxID_ANY, wxT(""), wxDefaultPosition, wxDefaultSize, 2, comboValue_choices, wxCB_DROPDOWN|wxCB_DROPDOWN);
    button_4_copy_1 = new wxButton(this, 3000, wxT("Add"));
    const wxString *listValue_choices = NULL;
    listValue = new wxListBox(this, wxID_ANY, wxDefaultPosition, wxDefaultSize, 0, listValue_choices, 0);
    button_5_copy_1 = new wxButton(this, 3001, wxT("Remove"));
    button_6_copy_1 = new wxButton(this, 3002, wxT("Remove All"));
    panel_2_copy_1 = new wxPanel(this, wxID_ANY);
    static_line_1 = new wxStaticLine(this, wxID_ANY);
    button_1 = new wxButton(this, 4000, wxT("Use Default Configuration"));
    panel_1 = new wxPanel(this, wxID_ANY);
    button_2 = new wxButton(this, wxID_CANCEL, wxT("Cancel"));
    button_3 = new wxButton(this, wxID_OK, wxT("&OK"));

    set_properties();
    do_layout();
    // end wxGlade
}


BEGIN_EVENT_TABLE(HtmlOptimumConfigDialog, wxDialog)
    // begin wxGlade: HtmlOptimumConfigDialog::event_table
    EVT_BUTTON(1000, HtmlOptimumConfigDialog::OnBtnTagAdd)
    EVT_BUTTON(1001, HtmlOptimumConfigDialog::OnBtnTagRemove)
    EVT_BUTTON(1002, HtmlOptimumConfigDialog::OnBtnRemoveAll)
    EVT_BUTTON(2000, HtmlOptimumConfigDialog::OnBtnAttrAdd)
    EVT_BUTTON(2001, HtmlOptimumConfigDialog::OnBtnAttrRemove)
    EVT_BUTTON(2002, HtmlOptimumConfigDialog::OnBtnAttrRemoveAll)
    EVT_BUTTON(3000, HtmlOptimumConfigDialog::OnBtnValAdd)
    EVT_BUTTON(3001, HtmlOptimumConfigDialog::OnBtnValRemove)
    EVT_BUTTON(3002, HtmlOptimumConfigDialog::OnBtnValRemoveAll)
    EVT_BUTTON(4000, HtmlOptimumConfigDialog::OnBtnDefault)
    EVT_BUTTON(wxID_CANCEL, HtmlOptimumConfigDialog::OnBtnCanel)
    EVT_BUTTON(wxID_OK, HtmlOptimumConfigDialog::OnBtnOK)
    // end wxGlade
END_EVENT_TABLE();


void HtmlOptimumConfigDialog::do_layout()
{
    // begin wxGlade: HtmlOptimumConfigDialog::do_layout
    wxBoxSizer* sizer_1 = new wxBoxSizer(wxVERTICAL);
    wxBoxSizer* sizer_2 = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* sizer_3_copy_1 = new wxBoxSizer(wxVERTICAL);
    wxBoxSizer* sizer_6_copy_1 = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* sizer_7_copy_1 = new wxBoxSizer(wxVERTICAL);
    wxBoxSizer* sizer_5_copy_1 = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* sizer_4_copy_1 = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* sizer_3_copy = new wxBoxSizer(wxVERTICAL);
    wxBoxSizer* sizer_6_copy = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* sizer_7_copy = new wxBoxSizer(wxVERTICAL);
    wxBoxSizer* sizer_5_copy = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* sizer_4_copy = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* sizer_3 = new wxBoxSizer(wxVERTICAL);
    wxBoxSizer* sizer_6 = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* sizer_7 = new wxBoxSizer(wxVERTICAL);
    wxBoxSizer* sizer_5 = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* sizer_4 = new wxBoxSizer(wxHORIZONTAL);
    sizer_4->Add(label_1, 0, wxLEFT|wxRIGHT|wxALIGN_CENTER_VERTICAL, 4);
    sizer_4->Add(static_line_2, 1, wxALL|wxALIGN_CENTER_VERTICAL, 8);
    sizer_3->Add(sizer_4, 0, wxEXPAND, 0);
    sizer_5->Add(comboTag, 1, wxALL|wxEXPAND|wxALIGN_CENTER_VERTICAL, 4);
    sizer_5->Add(button_4, 0, wxALL|wxALIGN_CENTER_VERTICAL, 4);
    sizer_3->Add(sizer_5, 0, wxLEFT|wxRIGHT|wxEXPAND, 32);
    sizer_6->Add(listTag, 1, wxALL|wxEXPAND, 4);
    sizer_7->Add(button_5, 0, wxBOTTOM, 4);
    sizer_7->Add(button_6, 0, wxTOP|wxBOTTOM, 0);
    sizer_7->Add(panel_2, 1, wxEXPAND, 0);
    sizer_6->Add(sizer_7, 0, wxALL|wxEXPAND, 4);
    sizer_3->Add(sizer_6, 1, wxLEFT|wxRIGHT|wxEXPAND, 32);
    sizer_1->Add(sizer_3, 1, wxALL|wxEXPAND, 2);
    sizer_4_copy->Add(label_1_copy, 0, wxLEFT|wxRIGHT|wxALIGN_CENTER_VERTICAL, 4);
    sizer_4_copy->Add(static_line_2_copy, 1, wxALL|wxALIGN_CENTER_VERTICAL, 8);
    sizer_3_copy->Add(sizer_4_copy, 0, wxEXPAND, 0);
    sizer_5_copy->Add(comboAttrib, 1, wxALL|wxEXPAND|wxALIGN_CENTER_VERTICAL, 4);
    sizer_5_copy->Add(button_4_copy, 0, wxALL|wxALIGN_CENTER_VERTICAL, 4);
    sizer_3_copy->Add(sizer_5_copy, 0, wxLEFT|wxRIGHT|wxEXPAND, 32);
    sizer_6_copy->Add(listAttrib, 1, wxALL|wxEXPAND, 4);
    sizer_7_copy->Add(button_5_copy, 0, wxBOTTOM, 4);
    sizer_7_copy->Add(button_6_copy, 0, wxTOP|wxBOTTOM, 0);
    sizer_7_copy->Add(panel_2_copy, 1, wxEXPAND, 0);
    sizer_6_copy->Add(sizer_7_copy, 0, wxALL|wxEXPAND, 4);
    sizer_3_copy->Add(sizer_6_copy, 1, wxLEFT|wxRIGHT|wxEXPAND, 32);
    sizer_1->Add(sizer_3_copy, 1, wxALL|wxEXPAND, 2);
    sizer_4_copy_1->Add(label_1_copy_1, 0, wxLEFT|wxRIGHT|wxALIGN_CENTER_VERTICAL, 4);
    sizer_4_copy_1->Add(static_line_2_copy_1, 1, wxALL|wxALIGN_CENTER_VERTICAL, 8);
    sizer_3_copy_1->Add(sizer_4_copy_1, 0, wxEXPAND, 0);
    sizer_5_copy_1->Add(comboValue, 1, wxALL|wxEXPAND|wxALIGN_CENTER_VERTICAL, 4);
    sizer_5_copy_1->Add(button_4_copy_1, 0, wxALL|wxALIGN_CENTER_VERTICAL, 4);
    sizer_3_copy_1->Add(sizer_5_copy_1, 0, wxLEFT|wxRIGHT|wxEXPAND, 32);
    sizer_6_copy_1->Add(listValue, 1, wxALL|wxEXPAND, 4);
    sizer_7_copy_1->Add(button_5_copy_1, 0, wxBOTTOM, 4);
    sizer_7_copy_1->Add(button_6_copy_1, 0, wxTOP|wxBOTTOM, 0);
    sizer_7_copy_1->Add(panel_2_copy_1, 1, wxEXPAND, 0);
    sizer_6_copy_1->Add(sizer_7_copy_1, 0, wxALL|wxEXPAND, 4);
    sizer_3_copy_1->Add(sizer_6_copy_1, 1, wxLEFT|wxRIGHT|wxEXPAND, 32);
    sizer_1->Add(sizer_3_copy_1, 1, wxALL|wxEXPAND, 2);
    sizer_1->Add(static_line_1, 0, wxALL|wxEXPAND, 8);
    sizer_2->Add(button_1, 0, wxALL, 4);
    sizer_2->Add(panel_1, 1, wxEXPAND, 0);
    sizer_2->Add(button_2, 0, wxALL, 4);
    sizer_2->Add(button_3, 0, wxALL, 4);
    sizer_1->Add(sizer_2, 0, wxALL|wxEXPAND, 4);
    SetSizer(sizer_1);
    Layout();
	Center();
    // end wxGlade
}


// wxGlade: add HtmlOptimumConfigDialog event handlers


void HtmlOptimumConfigDialog::set_properties()
{
    // begin wxGlade: HtmlOptimumConfigDialog::set_properties
    SetTitle(wxT("HTML Optimum Configuration"));
    SetSize(wxSize(451, 564));
    label_1->SetFont(wxFont(10, wxDEFAULT, wxNORMAL, wxBOLD, 0, wxT("")));
    comboTag->SetSelection(0);
    label_1_copy->SetFont(wxFont(10, wxDEFAULT, wxNORMAL, wxBOLD, 0, wxT("")));
    comboAttrib->SetSelection(0);
    label_1_copy_1->SetFont(wxFont(10, wxDEFAULT, wxNORMAL, wxBOLD, 0, wxT("")));
    comboValue->SetSelection(0);
    // end wxGlade

	InitConfig();
}

void HtmlOptimumConfigDialog::OnBtnTagAdd(wxCommandEvent &event)
{
    event.Skip();
    wxLogDebug(wxT("Event handler (HtmlOptimumConfigDialog::OnBtnTagAdd) not implemented yet")); //notify the user that he hasn't implemented the event handler yet
}


void HtmlOptimumConfigDialog::OnBtnTagRemove(wxCommandEvent &event)
{
    event.Skip();
    wxLogDebug(wxT("Event handler (HtmlOptimumConfigDialog::OnBtnTagRemove) not implemented yet")); //notify the user that he hasn't implemented the event handler yet
}


void HtmlOptimumConfigDialog::OnBtnRemoveAll(wxCommandEvent &event)
{
    event.Skip();
    wxLogDebug(wxT("Event handler (HtmlOptimumConfigDialog::OnBtnRemoveAll) not implemented yet")); //notify the user that he hasn't implemented the event handler yet
}


void HtmlOptimumConfigDialog::OnBtnAttrAdd(wxCommandEvent &event)
{
    event.Skip();
    wxLogDebug(wxT("Event handler (HtmlOptimumConfigDialog::OnBtnAttrAdd) not implemented yet")); //notify the user that he hasn't implemented the event handler yet
}


void HtmlOptimumConfigDialog::OnBtnAttrRemove(wxCommandEvent &event)
{
    event.Skip();
    wxLogDebug(wxT("Event handler (HtmlOptimumConfigDialog::OnBtnAttrRemove) not implemented yet")); //notify the user that he hasn't implemented the event handler yet
}


void HtmlOptimumConfigDialog::OnBtnAttrRemoveAll(wxCommandEvent &event)
{
    event.Skip();
    wxLogDebug(wxT("Event handler (HtmlOptimumConfigDialog::OnBtnAttrRemoveAll) not implemented yet")); //notify the user that he hasn't implemented the event handler yet
}


void HtmlOptimumConfigDialog::OnBtnValAdd(wxCommandEvent &event)
{
    event.Skip();
    wxLogDebug(wxT("Event handler (HtmlOptimumConfigDialog::OnBtnValAdd) not implemented yet")); //notify the user that he hasn't implemented the event handler yet
}


void HtmlOptimumConfigDialog::OnBtnValRemove(wxCommandEvent &event)
{
    event.Skip();
    wxLogDebug(wxT("Event handler (HtmlOptimumConfigDialog::OnBtnValRemove) not implemented yet")); //notify the user that he hasn't implemented the event handler yet
}


void HtmlOptimumConfigDialog::OnBtnValRemoveAll(wxCommandEvent &event)
{
    event.Skip();
    wxLogDebug(wxT("Event handler (HtmlOptimumConfigDialog::OnBtnValRemoveAll) not implemented yet")); //notify the user that he hasn't implemented the event handler yet
}


void HtmlOptimumConfigDialog::OnBtnDefault(wxCommandEvent &event)
{
    event.Skip();
    wxLogDebug(wxT("Event handler (HtmlOptimumConfigDialog::OnBtnDefault) not implemented yet")); //notify the user that he hasn't implemented the event handler yet
}


void HtmlOptimumConfigDialog::OnBtnCanel(wxCommandEvent &event)
{
    event.Skip();
    wxLogDebug(wxT("Event handler (HtmlOptimumConfigDialog::OnBtnCanel) not implemented yet")); //notify the user that he hasn't implemented the event handler yet
}


void HtmlOptimumConfigDialog::OnBtnOK(wxCommandEvent &event)
{
    event.Skip();
    wxLogDebug(wxT("Event handler (HtmlOptimumConfigDialog::OnBtnOK) not implemented yet")); //notify the user that he hasn't implemented the event handler yet
}



int HtmlOptimumConfigDialog::InitConfig()
{
	if(_config == NULL)
		return -1;

	const TinyHtmlParser::CDocumentOutputObject::TKeyMap& mapKey = _config->m_mapHtmlOptimumKey;

	//Tag
	if(TinyHtmlParser::CDocumentOutputObject::IsKey(&mapKey, TinyHtmlParser::CDocumentOutputObject::KT_ALL_TAG))
	{
		listTag->AppendString(STR_TAG_ALL);
	}
	else 
}

