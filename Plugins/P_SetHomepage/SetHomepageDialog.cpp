// -*- C++ -*- generated by wxGlade 0.6.3 on Tue Feb 21 11:29:26 2012

#include "DBAccess.h"

#include "SetHomepageDialog.h"

// begin wxGlade: ::extracode
// end wxGlade

const wxString SetHomepageDialog::PAGE_DEFAULT               =   wxEmptyString;
const wxString SetHomepageDialog::PAGE_LINGOSHOOK_DOWNLOAD   =   wxT("http://www.cppblog.com/codejie/archive/2010/07/23/108996.html");
const wxString SetHomepageDialog::PAGE_LINGOSHOOK_BLOG       =   wxT("http://www.cppblog.com/codejie/category/13873.html");

SetHomepageDialog::SetHomepageDialog(CDBAccess* dbaccess, wxWindow* parent, int id, const wxString& title, const wxPoint& pos, const wxSize& size, long style):
    wxDialog(parent, id, title, pos, size, wxDEFAULT_DIALOG_STYLE)
, _objDBAccess(dbaccess)
{
    // begin wxGlade: SetHomepageDialog::SetHomepageDialog
    label_1 = new wxStaticText(this, wxID_ANY, wxT("Home page"));
    const wxString m_listHomePage_choices[] = {
        wxT("Use Default Page"),
        wxT("Use LingosHook Blog Page"),
        wxT("Use LingosHook Download Page")
    };
    m_listHomepage = new wxComboBox(this, 1000, wxT(""), wxDefaultPosition, wxDefaultSize, 3, m_listHomePage_choices, wxCB_DROPDOWN|wxCB_DROPDOWN);
    static_line_2 = new wxStaticLine(this, wxID_ANY);
    m_btnOK = new wxButton(this, 1001, wxT("&OK"));
    panel_1 = new wxPanel(this, wxID_ANY);
    m_btnCancel = new wxButton(this, wxID_CLOSE, wxEmptyString);

    set_properties();
    do_layout();
    // end wxGlade
}


BEGIN_EVENT_TABLE(SetHomepageDialog, wxDialog)
    // begin wxGlade: SetHomepageDialog::event_table
    EVT_TEXT(1000, SetHomepageDialog::OnListText)
    EVT_BUTTON(1001, SetHomepageDialog::OnBtnOK)
    EVT_BUTTON(wxID_CLOSE, SetHomepageDialog::OnBtnCancel)
    // end wxGlade
END_EVENT_TABLE();


void SetHomepageDialog::OnListText(wxCommandEvent &event)
{
    wxString str = m_listHomepage->GetValue();

    m_btnOK->Enable(!str.IsEmpty());
}


void SetHomepageDialog::OnBtnOK(wxCommandEvent &event)
{
    wxString page = wxEmptyString;
    switch(m_listHomepage->GetSelection())
    {
    case 0:
        break;
    case 1:
        page = PAGE_LINGOSHOOK_BLOG;
        break;
    case 2:
        page = PAGE_LINGOSHOOK_DOWNLOAD;
        break;
    case -1:
        page = m_listHomepage->GetValue();
        break;
    default:
        break;
    }

    if(SetHomepage(page) != 0)
    {
        wxMessageBox(wxT("Homepage set failed."), wxT("Homepage Setting"), wxCENTRE | wxICON_ERROR);
    }
    else
    {
        Close();
    }
}


void SetHomepageDialog::OnBtnCancel(wxCommandEvent &event)
{
    Close();
}


// wxGlade: add SetHomepageDialog event handlers


void SetHomepageDialog::set_properties()
{
    // begin wxGlade: SetHomepageDialog::set_properties
    SetTitle(wxT("Homepage Setting - LingosHook Plugins"));
    SetSize(wxSize(416, 164));
//    m_listHomepage->SetSelection(0);
    // end wxGlade

    InitHomepageList();
}


void SetHomepageDialog::do_layout()
{
    // begin wxGlade: SetHomepageDialog::do_layout
    wxBoxSizer* sizer_1 = new wxBoxSizer(wxVERTICAL);
    wxBoxSizer* sizer_3 = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* sizer_2 = new wxBoxSizer(wxHORIZONTAL);
    sizer_2->Add(label_1, 0, wxLEFT|wxTOP, 8);
    sizer_1->Add(sizer_2, 0, wxALL|wxEXPAND, 4);
    sizer_1->Add(m_listHomepage, 0, wxALL|wxEXPAND, 16);
    sizer_1->Add(static_line_2, 0, wxALL|wxEXPAND, 4);
    sizer_3->Add(m_btnOK, 0, 0, 0);
    sizer_3->Add(panel_1, 1, wxEXPAND, 0);
    sizer_3->Add(m_btnCancel, 0, 0, 0);
    sizer_1->Add(sizer_3, 0, wxALL|wxEXPAND, 8);
    SetSizer(sizer_1);
    Layout();
    // end wxGlade
}

void SetHomepageDialog::InitHomepageList()
{
    if(_objDBAccess == NULL)
        return;
    
    try{
        CDBAccess::TDatabase& db = _objDBAccess->Database();
        CDBAccess::TQuery query = db.PrepareStatement("SELECT StrVal FROM ConfigTable WHERE Attr = 30");

        CDBAccess::TResult res = query.ExecuteQuery();
        if(res.IsOk())
        {
            if(!res.Eof())
            {
                wxString val = res.GetAsString(0);
                if(val == PAGE_DEFAULT)
                {
                    m_listHomepage->SetSelection(0);
                }
                else if(val == PAGE_LINGOSHOOK_BLOG)
                {
                    m_listHomepage->SetSelection(1);
                }
                else if(val == PAGE_LINGOSHOOK_DOWNLOAD)
                {
                    m_listHomepage->SetSelection(2);
                }
                else
                {
                    m_listHomepage->SetValue(res.GetAsString(0));
                }
            }
        }
    }
    catch(const CDBAccess::TException& e)
    {
        return;
    }
}

int SetHomepageDialog::SetHomepage(const wxString &page)
{
    if(_objDBAccess == NULL)
        return -1;

    try{
        CDBAccess::TDatabase& db = _objDBAccess->Database();
        CDBAccess::TQuery query = db.PrepareStatement("SELECT StrVal FROM ConfigTable WHERE Attr = ?");
	    query.Bind(1, 30);
        CDBAccess::TResult res = query.ExecuteQuery();
	    if(!res.IsOk())
            throw CDBAccess::TException(255, wxT("SELECT Attr of ConfigTable FAILED."));
        if(!res.Eof())
        {
            query.Reset();
            query = db.PrepareStatement("UPDATE ConfigTable SET StrVal = ? WHERE Attr = ?");
            query.Bind(1, page);
            query.Bind(2, 30);
            if(query.ExecuteUpdate() == 0)
                return -1;
        }
        else
        {
            query.Reset();
            query = db.PrepareStatement("INSERT INTO ConfigTable (Attr, IntVal, StrVal) VALUES(?, -1, ?)");
            query.Bind(1, 30);
            query.Bind(2, page);
            if(query.ExecuteUpdate() == 0)
                return -1;
        }
    }
    catch(const CDBAccess::TException& e)
    {
        return -1;
    }

    return 0;
}

